package net.minecraft.src.dqmcore.Pet;

import net.minecraft.src.*;

public class DqmModelRamiaBike extends ModelBase
{
  //fields
    ModelRenderer a1;
    ModelRenderer a2;
    ModelRenderer a3;
    ModelRenderer a4;
    ModelRenderer a5;
    ModelRenderer a6;
    ModelRenderer a7;
    ModelRenderer a8;
    ModelRenderer a9;
    ModelRenderer z1;
    ModelRenderer z2;
    ModelRenderer z3;
    ModelRenderer z4;
    ModelRenderer z5;
    ModelRenderer z6;
    ModelRenderer z7;
    ModelRenderer z8;
    ModelRenderer sm1;
    ModelRenderer sm2;
    ModelRenderer sm3;
    ModelRenderer sh1;
    ModelRenderer sh2;
    ModelRenderer sh3;
    ModelRenderer mh1;
    ModelRenderer mh2;
    ModelRenderer mh3;
    ModelRenderer mh4;
    ModelRenderer mh5;
    ModelRenderer mh6;
    ModelRenderer mh7;
    ModelRenderer hh1;
    ModelRenderer hh2;
    ModelRenderer hh3;
    ModelRenderer hh4;
    ModelRenderer hh5;
    ModelRenderer hh6;
    ModelRenderer hh7;
    ModelRenderer ma1;
    ModelRenderer ma2;
    ModelRenderer ma3;
    ModelRenderer ma4;
    ModelRenderer ma5;
    ModelRenderer ha1;
    ModelRenderer ha2;
    ModelRenderer ha3;
    ModelRenderer ha4;
    ModelRenderer ha5;

  public DqmModelRamiaBike()
  {
    textureWidth = 256;
    textureHeight = 256;

      a1 = new ModelRenderer(this, 220, 0);
      a1.addBox(-2.5F, -12F, -20F, 3, 1, 5);
      a1.setRotationPoint(0F, -30F, 0F);
      a1.setTextureSize(256, 256);
      a1.mirror = true;
      setRotation(a1, 1.184552F, 0F, 0F);
      a2 = new ModelRenderer(this, 220, 6);
      a2.addBox(-2.5F, -11F, -20F, 3, 1, 10);
      a2.setRotationPoint(0F, -30F, 0F);
      a2.setTextureSize(256, 256);
      a2.mirror = true;
      setRotation(a2, 1.22173F, 0F, 0F);
      a3 = new ModelRenderer(this, 220, 17);
      a3.addBox(-3.5F, -13F, -15F, 5, 2, 5);
      a3.setRotationPoint(0F, -30F, 0F);
      a3.setTextureSize(256, 256);
      a3.mirror = true;
      setRotation(a3, 1.184552F, 0F, 0F);
      a4 = new ModelRenderer(this, 204, 24);
      a4.addBox(-8F, -23F, -8F, 14, 3, 12);
      a4.setRotationPoint(0F, -30F, 0F);
      a4.setTextureSize(256, 256);
      a4.mirror = true;
      setRotation(a4, 1.184552F, 0F, 0F);
      a5 = new ModelRenderer(this, 188, 39);
      a5.addBox(-10F, -20F, -10F, 18, 10, 16);
      a5.setRotationPoint(0F, -30F, 0F);
      a5.setTextureSize(256, 256);
      a5.mirror = true;
      setRotation(a5, 1.184552F, 0F, 0F);
      a6 = new ModelRenderer(this, 220, 65);
      a6.addBox(4F, -25F, 12F, 2, 2, 11);
      a6.setRotationPoint(0F, -30F, 0F);
      a6.setTextureSize(256, 256);
      a6.mirror = true;
      setRotation(a6, 1.22173F, 0F, 0F);
      a7 = new ModelRenderer(this, 220, 78);
      a7.addBox(3F, -24F, 3F, 2, 2, 11);
      a7.setRotationPoint(0F, -30F, 0F);
      a7.setTextureSize(256, 256);
      a7.mirror = true;
      setRotation(a7, 1.22173F, 0F, 0F);
      a8 = new ModelRenderer(this, 194, 65);
      a8.addBox(-7F, -24F, 3F, 2, 2, 11);
      a8.setRotationPoint(0F, -30F, 0F);
      a8.setTextureSize(256, 256);
      a8.mirror = true;
      setRotation(a8, 1.22173F, 0F, 0F);
      a9 = new ModelRenderer(this, 194, 78);
      a9.addBox(-8F, -25F, 12F, 2, 2, 11);
      a9.setRotationPoint(0F, -30F, 0F);
      a9.setTextureSize(256, 256);
      a9.mirror = true;
      setRotation(a9, 1.22173F, 0F, 0F);
      z1 = new ModelRenderer(this, 0, 222);
      z1.addBox(-13F, 24F, -13F, 24, 12, 22);
      z1.setRotationPoint(0F, -30F, 0F);
      z1.setTextureSize(256, 256);
      z1.mirror = true;
      setRotation(z1, 1.184552F, 0F, 0F);
      z2 = new ModelRenderer(this, 0, 194);
      z2.addBox(-11F, 36F, -11F, 20, 10, 18);
      z2.setRotationPoint(0F, -30F, 0F);
      z2.setTextureSize(256, 256);
      z2.mirror = true;
      setRotation(z2, 1.184552F, 0F, 0F);
      z3 = new ModelRenderer(this, 92, 208);
      z3.addBox(-14F, 0F, -14F, 26, 24, 24);
      z3.setRotationPoint(0F, -30F, 0F);
      z3.setTextureSize(256, 256);
      z3.mirror = true;
      setRotation(z3, 1.184552F, 0F, 0F);
      z4 = new ModelRenderer(this, 100, 183);
      z4.addBox(-12F, -10F, -12F, 22, 5, 20);
      z4.setRotationPoint(0F, -30F, 0F);
      z4.setTextureSize(256, 256);
      z4.mirror = true;
      setRotation(z4, 1.184552F, 0F, 0F);
      z5 = new ModelRenderer(this, 0, 167);
      z5.addBox(-13F, -5F, -13F, 24, 5, 22);
      z5.setRotationPoint(0F, -30F, 0F);
      z5.setTextureSize(256, 256);
      z5.mirror = true;
      setRotation(z5, 1.184552F, 0F, 0F);
      z6 = new ModelRenderer(this, 0, 158);
      z6.addBox(-5F, 61F, -5F, 8, 3, 6);
      z6.setRotationPoint(0F, -30F, 0F);
      z6.setTextureSize(256, 256);
      z6.mirror = true;
      setRotation(z6, 1.184552F, 0F, 0F);
      z7 = new ModelRenderer(this, 100, 159);
      z7.addBox(-9F, 46F, -9F, 16, 10, 14);
      z7.setRotationPoint(0F, -30F, 0F);
      z7.setTextureSize(256, 256);
      z7.mirror = true;
      setRotation(z7, 1.184552F, 0F, 0F);
      z8 = new ModelRenderer(this, 28, 152);
      z8.addBox(-7F, 56F, -7F, 12, 5, 10);
      z8.setRotationPoint(0F, -30F, 0F);
      z8.setTextureSize(256, 256);
      z8.mirror = true;
      setRotation(z8, 1.184552F, 0F, 0F);
      sm1 = new ModelRenderer(this, 240, 235);
      sm1.addBox(-4F, 0F, -0.5F, 7, 20, 1);
      sm1.setRotationPoint(-3F, -4F, 59F);
      sm1.setTextureSize(256, 256);
      sm1.mirror = true;
      setRotation(sm1, 1.184555F, -0.3490659F, 0F);
      sm2 = new ModelRenderer(this, 244, 214);
      sm2.addBox(-3F, 20F, -0.5F, 5, 20, 1);
      sm2.setRotationPoint(-3F, -4F, 59F);
      sm2.setTextureSize(256, 256);
      sm2.mirror = true;
      setRotation(sm2, 1.184555F, -0.3490659F, 0F);
      sm3 = new ModelRenderer(this, 248, 193);
      sm3.addBox(-2F, 40F, -0.5F, 3, 20, 1);
      sm3.setRotationPoint(-3F, -4F, 59F);
      sm3.setTextureSize(256, 256);
      sm3.mirror = true;
      setRotation(sm3, 1.184555F, -0.3490659F, 0F);
      sh1 = new ModelRenderer(this, 240, 235);
      sh1.addBox(-3F, 0F, -0.5F, 7, 20, 1);
      sh1.setRotationPoint(1F, -4F, 59F);
      sh1.setTextureSize(256, 256);
      sh1.mirror = true;
      setRotation(sh1, 1.184555F, 0.3490659F, 0F);
      sh2 = new ModelRenderer(this, 244, 214);
      sh2.addBox(-2F, 20F, -0.5F, 5, 20, 1);
      sh2.setRotationPoint(1F, -4F, 59F);
      sh2.setTextureSize(256, 256);
      sh2.mirror = true;
      setRotation(sh2, 1.184555F, 0.3490659F, 0F);
      sh3 = new ModelRenderer(this, 248, 193);
      sh3.addBox(-1F, 40F, -0.5F, 3, 20, 1);
      sh3.setRotationPoint(1F, -4F, 59F);
      sh3.setTextureSize(256, 256);
      sh3.mirror = true;
      setRotation(sh3, 1.184555F, 0.3490659F, 0F);
      mh1 = new ModelRenderer(this, 0, 100);
      mh1.addBox(-25F, -15F, -2F, 25, 34, 2);
      mh1.setRotationPoint(-11F, -28F, 21F);
      mh1.setTextureSize(256, 256);
      mh1.mirror = true;
      setRotation(mh1, 1.184552F, 0F, 0F);
      mh2 = new ModelRenderer(this, 54, 100);
      mh2.addBox(-35F, -19F, -2F, 10, 40, 2);
      mh2.setRotationPoint(-11F, -28F, 21F);
      mh2.setTextureSize(256, 256);
      mh2.mirror = true;
      setRotation(mh2, 1.184552F, 0F, 0F);
      mh3 = new ModelRenderer(this, 78, 100);
      mh3.addBox(-46F, -14F, -2F, 11, 40, 2);
      mh3.setRotationPoint(-11F, -28F, 21F);
      mh3.setTextureSize(256, 256);
      mh3.mirror = true;
      setRotation(mh3, 1.184552F, 0F, 0F);
      mh4 = new ModelRenderer(this, 104, 100);
      mh4.addBox(-54F, -10F, -2F, 8, 40, 2);
      mh4.setRotationPoint(-11F, -28F, 21F);
      mh4.setTextureSize(256, 256);
      mh4.mirror = true;
      setRotation(mh4, 1.184552F, 0F, 0F);
      mh5 = new ModelRenderer(this, 124, 100);
      mh5.addBox(-63F, -6F, -2F, 9, 44, 2);
      mh5.setRotationPoint(-11F, -28F, 21F);
      mh5.setTextureSize(256, 256);
      mh5.mirror = true;
      setRotation(mh5, 1.184552F, 0F, 0F);
      mh6 = new ModelRenderer(this, 146, 100);
      mh6.addBox(-69F, 0F, -2F, 6, 48, 2);
      mh6.setRotationPoint(-11F, -28F, 21F);
      mh6.setTextureSize(256, 256);
      mh6.mirror = true;
      setRotation(mh6, 1.184552F, 0F, 0F);
      mh7 = new ModelRenderer(this, 162, 100);
      mh7.addBox(-76F, 7F, -2F, 7, 34, 2);
      mh7.setRotationPoint(-11F, -28F, 21F);
      mh7.setTextureSize(256, 256);
      mh7.mirror = true;
      setRotation(mh7, 1.184552F, 0F, 0F);
      hh1 = new ModelRenderer(this, 0, 100);
      hh1.addBox(0F, -15F, -2F, 25, 34, 2);
      hh1.setRotationPoint(9F, -28F, 21F);
      hh1.setTextureSize(256, 256);
      hh1.mirror = true;
      setRotation(hh1, 1.184552F, 0F, 0F);
      hh2 = new ModelRenderer(this, 54, 100);
      hh2.addBox(25F, -18F, -2F, 10, 40, 2);
      hh2.setRotationPoint(9F, -28F, 21F);
      hh2.setTextureSize(256, 256);
      hh2.mirror = true;
      setRotation(hh2, 1.184552F, 0F, 0F);
      hh3 = new ModelRenderer(this, 78, 100);
      hh3.addBox(35F, -14F, -2F, 11, 40, 2);
      hh3.setRotationPoint(9F, -28F, 21F);
      hh3.setTextureSize(256, 256);
      hh3.mirror = true;
      setRotation(hh3, 1.184552F, 0F, 0F);
      hh4 = new ModelRenderer(this, 104, 100);
      hh4.addBox(46F, -10F, -2F, 8, 40, 2);
      hh4.setRotationPoint(9F, -28F, 21F);
      hh4.setTextureSize(256, 256);
      hh4.mirror = true;
      setRotation(hh4, 1.184552F, 0F, 0F);
      hh5 = new ModelRenderer(this, 124, 100);
      hh5.addBox(54F, -6F, -2F, 9, 44, 2);
      hh5.setRotationPoint(9F, -28F, 21F);
      hh5.setTextureSize(256, 256);
      hh5.mirror = true;
      setRotation(hh5, 1.184552F, 0F, 0F);
      hh6 = new ModelRenderer(this, 146, 100);
      hh6.addBox(63F, 0F, -2F, 6, 48, 2);
      hh6.setRotationPoint(9F, -28F, 21F);
      hh6.setTextureSize(256, 256);
      hh6.mirror = true;
      setRotation(hh6, 1.184552F, 0F, 0F);
      hh7 = new ModelRenderer(this, 162, 100);
      hh7.addBox(69F, 7F, -2F, 7, 34, 2);
      hh7.setRotationPoint(9F, -28F, 21F);
      hh7.setTextureSize(256, 256);
      hh7.mirror = true;
      setRotation(hh7, 1.184552F, 0F, 0F);
      ma1 = new ModelRenderer(this, 0, 0);
      ma1.addBox(-1F, 12F, -10.5F, 2, 2, 10);
      ma1.setRotationPoint(-5F, -4F, 40F);
      ma1.setTextureSize(256, 256);
      ma1.mirror = true;
      setRotation(ma1, 0F, 0.3490659F, 0F);
      ma2 = new ModelRenderer(this, 0, 0);
      ma2.addBox(-1F, 0F, -1F, 2, 10, 2);
      ma2.setRotationPoint(-5F, -4F, 40F);
      ma2.setTextureSize(256, 256);
      ma2.mirror = true;
      setRotation(ma2, 0F, 0F, 0F);
      ma3 = new ModelRenderer(this, 0, 0);
      ma3.addBox(-1.5F, 9F, -3.5F, 3, 5, 5);
      ma3.setRotationPoint(-5F, -4F, 40F);
      ma3.setTextureSize(256, 256);
      ma3.mirror = true;
      setRotation(ma3, 0F, 0F, 0F);
      ma4 = new ModelRenderer(this, 0, 0);
      ma4.addBox(-1F, 12F, -11.5F, 2, 2, 10);
      ma4.setRotationPoint(-5F, -4F, 40F);
      ma4.setTextureSize(256, 256);
      ma4.mirror = true;
      setRotation(ma4, 0F, -0.3490659F, 0F);
      ma5 = new ModelRenderer(this, 0, 0);
      ma5.addBox(-1F, 12F, -11.5F, 2, 2, 10);
      ma5.setRotationPoint(-5F, -4F, 40F);
      ma5.setTextureSize(256, 256);
      ma5.mirror = true;
      setRotation(ma5, 0F, 0F, 0F);
      ha1 = new ModelRenderer(this, 0, 0);
      ha1.addBox(-1F, 12F, -11.5F, 2, 2, 10);
      ha1.setRotationPoint(5F, -4F, 40F);
      ha1.setTextureSize(256, 256);
      ha1.mirror = true;
      setRotation(ha1, 0F, -0.3490659F, 0F);
      ha2 = new ModelRenderer(this, 0, 0);
      ha2.addBox(-1F, 12F, -11.5F, 2, 2, 10);
      ha2.setRotationPoint(5F, -4F, 40F);
      ha2.setTextureSize(256, 256);
      ha2.mirror = true;
      setRotation(ha2, 0F, 0F, 0F);
      ha3 = new ModelRenderer(this, 0, 0);
      ha3.addBox(-1F, 12F, -10.5F, 2, 2, 10);
      ha3.setRotationPoint(5F, -4F, 40F);
      ha3.setTextureSize(256, 256);
      ha3.mirror = true;
      setRotation(ha3, 0F, 0.3490659F, 0F);
      ha4 = new ModelRenderer(this, 0, 0);
      ha4.addBox(-1.5F, 9F, -3.5F, 3, 5, 5);
      ha4.setRotationPoint(5F, -4F, 40F);
      ha4.setTextureSize(256, 256);
      ha4.mirror = true;
      setRotation(ha4, 0F, 0F, 0F);
      ha5 = new ModelRenderer(this, 0, 0);
      ha5.addBox(-1F, 0F, -1F, 2, 10, 2);
      ha5.setRotationPoint(5F, -4F, 40F);
      ha5.setTextureSize(256, 256);
      ha5.mirror = true;
      setRotation(ha5, 0F, 0F, 0F);
  }

  public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
  {
    super.render(entity, f, f1, f2, f3, f4, f5);
    setRotationAngles(f, f1, f2, f3, f4, f5);
    a1.render(f5);
    a2.render(f5);
    a3.render(f5);
    a4.render(f5);
    a5.render(f5);
    a6.render(f5);
    a7.render(f5);
    a8.render(f5);
    a9.render(f5);
    z1.render(f5);
    z2.render(f5);
    z3.render(f5);
    z4.render(f5);
    z5.render(f5);
    z6.render(f5);
    z7.render(f5);
    z8.render(f5);
    sm1.render(f5);
    sm2.render(f5);
    sm3.render(f5);
    sh1.render(f5);
    sh2.render(f5);
    sh3.render(f5);
    mh1.render(f5);
    mh2.render(f5);
    mh3.render(f5);
    mh4.render(f5);
    mh5.render(f5);
    mh6.render(f5);
    mh7.render(f5);
    hh1.render(f5);
    hh2.render(f5);
    hh3.render(f5);
    hh4.render(f5);
    hh5.render(f5);
    hh6.render(f5);
    hh7.render(f5);
    ma1.render(f5);
    ma2.render(f5);
    ma3.render(f5);
    ma4.render(f5);
    ma5.render(f5);
    ha1.render(f5);
    ha2.render(f5);
    ha3.render(f5);
    ha4.render(f5);
    ha5.render(f5);
  }

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6)
	{
		a1.rotateAngleY = par4 / (180F / (float)Math.PI);
		a2.rotateAngleY = par4 / (180F / (float)Math.PI);
		a3.rotateAngleY = par4 / (180F / (float)Math.PI);
		a4.rotateAngleY = par4 / (180F / (float)Math.PI);
		a5.rotateAngleY = par4 / (180F / (float)Math.PI);
		a6.rotateAngleY = par4 / (180F / (float)Math.PI);
		a7.rotateAngleY = par4 / (180F / (float)Math.PI);
		a8.rotateAngleY = par4 / (180F / (float)Math.PI);
		a9.rotateAngleY = par4 / (180F / (float)Math.PI);

		sm1.rotateAngleY = MathHelper.cos(par1 * 0.2662F) * 0.7F * par2;
		sm2.rotateAngleY = MathHelper.cos(par1 * 0.2662F) * 0.7F * par2;
		sm3.rotateAngleY = MathHelper.cos(par1 * 0.2662F) * 0.7F * par2;

		sh1.rotateAngleY = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 0.7F * par2;
		sh2.rotateAngleY = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 0.7F * par2;
		sh3.rotateAngleY = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 0.7F * par2;

		ha1.rotateAngleX = MathHelper.cos(par1 * 0.2662F) * 1.2F * par2;
		ha2.rotateAngleX = MathHelper.cos(par1 * 0.2662F) * 1.2F * par2;
		ha3.rotateAngleX = MathHelper.cos(par1 * 0.2662F) * 1.2F * par2;
		ha4.rotateAngleX = MathHelper.cos(par1 * 0.2662F) * 1.2F * par2;
		ha5.rotateAngleX = MathHelper.cos(par1 * 0.2662F) * 1.2F * par2;

		ma1.rotateAngleX = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 1.2F * par2;
		ma2.rotateAngleX = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 1.2F * par2;
		ma3.rotateAngleX = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 1.2F * par2;
		ma4.rotateAngleX = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 1.2F * par2;
		ma5.rotateAngleX = MathHelper.cos(par1 * 0.2662F + (float)Math.PI) * 1.2F * par2;

		hh1.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 1.2F * par2;
		hh2.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 1.2F * par2;
		hh3.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 1.2F * par2;
		hh4.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 1.2F * par2;
		hh5.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 1.2F * par2;
		hh6.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 1.2F * par2;
		hh7.rotateAngleZ = MathHelper.cos(par1 * 0.3662F + (float)Math.PI) * 1.2F * par2;

		mh1.rotateAngleZ = MathHelper.cos(par1 * 0.3662F) * 1.2F * par2;
		mh2.rotateAngleZ = MathHelper.cos(par1 * 0.3662F) * 1.2F * par2;
		mh3.rotateAngleZ = MathHelper.cos(par1 * 0.3662F) * 1.2F * par2;
		mh4.rotateAngleZ = MathHelper.cos(par1 * 0.3662F) * 1.2F * par2;
		mh5.rotateAngleZ = MathHelper.cos(par1 * 0.3662F) * 1.2F * par2;
		mh6.rotateAngleZ = MathHelper.cos(par1 * 0.3662F) * 1.2F * par2;
		mh7.rotateAngleZ = MathHelper.cos(par1 * 0.3662F) * 1.2F * par2;


	}

}
