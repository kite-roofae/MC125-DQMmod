package net.minecraft.src.dqmcore.DqmModel;

import net.minecraft.src.*;

public class DqmModelEsterk extends ModelBase
{
	//fields
	ModelRenderer kao1;
	ModelRenderer kao2;
	ModelRenderer kao3;
	ModelRenderer kuti;
	ModelRenderer h_tuno1;
	ModelRenderer h_tuno2;
	ModelRenderer m_tuno1;
	ModelRenderer m_tuno2;
	ModelRenderer kabuto1;
	ModelRenderer kabuto2;
	ModelRenderer kabuto3;
	ModelRenderer karada;
	ModelRenderer kosiue;
	ModelRenderer kosi;
	ModelRenderer kosisita;
	ModelRenderer kosisita2;
	ModelRenderer h_momo;
	ModelRenderer h_hiza;
	ModelRenderer h_sune;
	ModelRenderer h_asi;
	ModelRenderer h_tume1;
	ModelRenderer h_tume2;
	ModelRenderer h_tume3;
	ModelRenderer m_momo;
	ModelRenderer m_hiza;
	ModelRenderer m_sune;
	ModelRenderer m_asi;
	ModelRenderer m_tume1;
	ModelRenderer m_tume2;
	ModelRenderer m_tume3;
	ModelRenderer m_kata;
	ModelRenderer m_ude;
	ModelRenderer m_hiji;
	ModelRenderer mi_kou;
	ModelRenderer m_te;
	ModelRenderer h_kata;
	ModelRenderer h_ude;
	ModelRenderer h_hiji;
	ModelRenderer h_kou;
	ModelRenderer h_te;
	ModelRenderer m_ken1;
	ModelRenderer m_ken2;
	ModelRenderer m_ken3;
	ModelRenderer m_ken4;
	ModelRenderer h_ken1;
	ModelRenderer h_ken2;
	ModelRenderer h_ken3;
	ModelRenderer h_ken4;

	public DqmModelEsterk()
	{
		textureWidth = 256;
		textureHeight = 256;

		kao1 = new ModelRenderer(this, 2, 0);
		kao1.addBox(-4F, -18F, -4F, 8, 4, 8);
		kao1.setRotationPoint(0F, -39F, 0F);
		kao1.setTextureSize(256, 256);
		kao1.mirror = true;
		setRotation(kao1, 0F, 0F, 0F);
		kao2 = new ModelRenderer(this, 2, 12);
		kao2.addBox(-6F, -14F, -6F, 12, 7, 12);
		kao2.setRotationPoint(0F, -39F, 0F);
		kao2.setTextureSize(256, 256);
		kao2.mirror = true;
		setRotation(kao2, 0F, 0F, 0F);
		kao3 = new ModelRenderer(this, 2, 31);
		kao3.addBox(-7F, -7F, -6F, 14, 2, 12);
		kao3.setRotationPoint(0F, -39F, 0F);
		kao3.setTextureSize(256, 256);
		kao3.mirror = true;
		setRotation(kao3, 0F, 0F, 0F);
		kuti = new ModelRenderer(this, 2, 45);
		kuti.addBox(-4F, -5F, -4F, 8, 5, 8);
		kuti.setRotationPoint(0F, -39F, 0F);
		kuti.setTextureSize(256, 256);
		kuti.mirror = true;
		setRotation(kuti, 0F, 0F, 0F);
		h_tuno1 = new ModelRenderer(this, 52, 0);
		h_tuno1.addBox(12F, -28.5F, -0.5F, 2, 10, 2);
		h_tuno1.setRotationPoint(0F, -39F, 0F);
		h_tuno1.setTextureSize(256, 256);
		h_tuno1.mirror = true;
		setRotation(h_tuno1, 0F, 0F, 0.1745329F);
		h_tuno2 = new ModelRenderer(this, 60, 0);
		h_tuno2.addBox(4F, -17F, -1F, 13, 3, 3);
		h_tuno2.setRotationPoint(0F, -39F, 0F);
		h_tuno2.setTextureSize(256, 256);
		h_tuno2.mirror = true;
		setRotation(h_tuno2, 0F, 0F, -0.0698132F);
		m_tuno1 = new ModelRenderer(this, 52, 0);
		m_tuno1.addBox(-14F, -28.5F, -0.5F, 2, 10, 2);
		m_tuno1.setRotationPoint(0F, -39F, 0F);
		m_tuno1.setTextureSize(256, 256);
		m_tuno1.mirror = true;
		setRotation(m_tuno1, 0F, 0F, -0.1745329F);
		m_tuno2 = new ModelRenderer(this, 60, 0);
		m_tuno2.addBox(-17F, -17F, -1F, 13, 3, 3);
		m_tuno2.setRotationPoint(0F, -39F, 0F);
		m_tuno2.setTextureSize(256, 256);
		m_tuno2.mirror = true;
		setRotation(m_tuno2, 0F, 0F, 0.0698132F);
		kabuto1 = new ModelRenderer(this, 58, 16);
		kabuto1.addBox(-8F, -16F, 6F, 16, 6, 1);
		kabuto1.setRotationPoint(0F, -39F, 0F);
		kabuto1.setTextureSize(256, 256);
		kabuto1.mirror = true;
		setRotation(kabuto1, 0F, 0F, 0F);
		kabuto2 = new ModelRenderer(this, 58, 23);
		kabuto2.addBox(-10F, -10F, 6F, 20, 5, 2);
		kabuto2.setRotationPoint(0F, -39F, 0F);
		kabuto2.setTextureSize(256, 256);
		kabuto2.mirror = true;
		setRotation(kabuto2, 0F, 0F, 0F);
		kabuto3 = new ModelRenderer(this, 58, 30);
		kabuto3.addBox(-12F, -5F, 6F, 24, 5, 3);
		kabuto3.setRotationPoint(0F, -39F, 0F);
		kabuto3.setTextureSize(256, 256);
		kabuto3.mirror = true;
		setRotation(kabuto3, 0F, 0F, 0F);
		karada = new ModelRenderer(this, 0, 69);
		karada.addBox(-15F, 0F, -10F, 30, 27, 20);
		karada.setRotationPoint(0F, -39F, 0F);
		karada.setTextureSize(256, 256);
		karada.mirror = true;
		setRotation(karada, 0F, 0F, 0F);
		kosiue = new ModelRenderer(this, 0, 116);
		kosiue.addBox(-10F, 0F, -8F, 20, 3, 16);
		kosiue.setRotationPoint(0F, -12F, 0F);
		kosiue.setTextureSize(256, 256);
		kosiue.mirror = true;
		setRotation(kosiue, 0F, 0F, 0F);
		kosi = new ModelRenderer(this, 0, 135);
		kosi.addBox(-12F, 0F, -9F, 24, 7, 18);
		kosi.setRotationPoint(0F, -9F, 0F);
		kosi.setTextureSize(256, 256);
		kosi.mirror = true;
		setRotation(kosi, 0F, 0F, 0F);
		kosisita = new ModelRenderer(this, 0, 160);
		kosisita.addBox(-5F, 0F, -10F, 10, 8, 20);
		kosisita.setRotationPoint(0F, -2F, 0F);
		kosisita.setTextureSize(256, 256);
		kosisita.mirror = true;
		setRotation(kosisita, 0F, 0F, 0F);
		kosisita2 = new ModelRenderer(this, 0, 188);
		kosisita2.addBox(-3F, 0F, -8F, 6, 5, 16);
		kosisita2.setRotationPoint(0F, 6F, 0F);
		kosisita2.setTextureSize(256, 256);
		kosisita2.mirror = true;
		setRotation(kosisita2, 0F, 0F, 0F);
		h_momo = new ModelRenderer(this, 114, 146);
		h_momo.addBox(0F, 0F, -5F, 10, 8, 10);
		h_momo.setRotationPoint(5F, -2F, 0F);
		h_momo.setTextureSize(256, 256);
		h_momo.mirror = true;
		setRotation(h_momo, 0F, 0F, 0F);
		h_hiza = new ModelRenderer(this, 114, 164);
		h_hiza.addBox(10F, 2F, -4F, 8, 8, 8);
		h_hiza.setRotationPoint(5F, -2F, 0F);
		h_hiza.setTextureSize(256, 256);
		h_hiza.mirror = true;
		setRotation(h_hiza, 0F, 0F, 0F);
		h_sune = new ModelRenderer(this, 114, 180);
		h_sune.addBox(10.5F, 10F, -3.5F, 7, 11, 7);
		h_sune.setRotationPoint(5F, -2F, 0F);
		h_sune.setTextureSize(256, 256);
		h_sune.mirror = true;
		setRotation(h_sune, 0F, 0F, 0F);
		h_asi = new ModelRenderer(this, 114, 198);
		h_asi.addBox(10F, 21F, -5F, 10, 5, 10);
		h_asi.setRotationPoint(5F, -2F, 0F);
		h_asi.setTextureSize(256, 256);
		h_asi.mirror = true;
		setRotation(h_asi, 0F, 0F, 0F);
		h_tume1 = new ModelRenderer(this, 114, 213);
		h_tume1.addBox(11F, 23F, -11F, 3, 3, 6);
		h_tume1.setRotationPoint(5F, -2F, 0F);
		h_tume1.setTextureSize(256, 256);
		h_tume1.mirror = true;
		setRotation(h_tume1, 0F, 0F, 0F);
		h_tume2 = new ModelRenderer(this, 114, 222);
		h_tume2.addBox(20F, 23F, -4F, 8, 3, 3);
		h_tume2.setRotationPoint(5F, -2F, 0F);
		h_tume2.setTextureSize(256, 256);
		h_tume2.mirror = true;
		setRotation(h_tume2, 0F, 0F, 0F);
		h_tume3 = new ModelRenderer(this, 114, 222);
		h_tume3.addBox(20F, 23F, 1F, 8, 3, 3);
		h_tume3.setRotationPoint(5F, -2F, 0F);
		h_tume3.setTextureSize(256, 256);
		h_tume3.mirror = true;
		setRotation(h_tume3, 0F, 0F, 0F);
		m_momo = new ModelRenderer(this, 164, 146);
		m_momo.addBox(-10F, 0F, -5F, 10, 8, 10);
		m_momo.setRotationPoint(-5F, -2F, 0F);
		m_momo.setTextureSize(256, 256);
		m_momo.mirror = true;
		setRotation(m_momo, 0F, 0F, 0F);
		m_hiza = new ModelRenderer(this, 164, 164);
		m_hiza.addBox(-18F, 2F, -4F, 8, 8, 8);
		m_hiza.setRotationPoint(-5F, -2F, 0F);
		m_hiza.setTextureSize(256, 256);
		m_hiza.mirror = true;
		setRotation(m_hiza, 0F, 0F, 0F);
		m_sune = new ModelRenderer(this, 164, 180);
		m_sune.addBox(-17.5F, 10F, -3.5F, 7, 11, 7);
		m_sune.setRotationPoint(-5F, -2F, 0F);
		m_sune.setTextureSize(256, 256);
		m_sune.mirror = true;
		setRotation(m_sune, 0F, 0F, 0F);
		m_asi = new ModelRenderer(this, 164, 198);
		m_asi.addBox(-20F, 21F, -5F, 10, 5, 10);
		m_asi.setRotationPoint(-5F, -2F, 0F);
		m_asi.setTextureSize(256, 256);
		m_asi.mirror = true;
		setRotation(m_asi, 0F, 0F, 0F);
		m_tume1 = new ModelRenderer(this, 164, 213);
		m_tume1.addBox(-14F, 23F, -11F, 3, 3, 6);
		m_tume1.setRotationPoint(-5F, -2F, 0F);
		m_tume1.setTextureSize(256, 256);
		m_tume1.mirror = true;
		setRotation(m_tume1, 0F, 0F, 0F);
		m_tume2 = new ModelRenderer(this, 164, 222);
		m_tume2.addBox(-28F, 23F, -4F, 8, 3, 3);
		m_tume2.setRotationPoint(-5F, -2F, 0F);
		m_tume2.setTextureSize(256, 256);
		m_tume2.mirror = true;
		setRotation(m_tume2, 0F, 0F, 0F);
		m_tume3 = new ModelRenderer(this, 164, 222);
		m_tume3.addBox(-28F, 23F, 1F, 8, 3, 3);
		m_tume3.setRotationPoint(-5F, -2F, 0F);
		m_tume3.setTextureSize(256, 256);
		m_tume3.mirror = true;
		setRotation(m_tume3, 0F, 0F, 0F);
		m_kata = new ModelRenderer(this, 114, 30);
		m_kata.addBox(-20F, -6F, -12F, 20, 6, 24);
		m_kata.setRotationPoint(-7F, -36F, 0F);
		m_kata.setTextureSize(256, 256);
		m_kata.mirror = true;
		setRotation(m_kata, 0F, 0F, 0F);
		m_ude = new ModelRenderer(this, 114, 64);
		m_ude.addBox(-12.5F, 0F, -5F, 12, 10, 10);
		m_ude.setRotationPoint(-15F, -34F, 0F);
		m_ude.setTextureSize(256, 256);
		m_ude.mirror = true;
		setRotation(m_ude, 0F, 0F, 0F);
		m_hiji = new ModelRenderer(this, 114, 84);
		m_hiji.addBox(-28.5F, 3F, -4F, 16, 9, 8);
		m_hiji.setRotationPoint(-15F, -34F, 0F);
		m_hiji.setTextureSize(256, 256);
		m_hiji.mirror = true;
		setRotation(m_hiji, 0F, 0F, 0F);
		mi_kou = new ModelRenderer(this, 114, 101);
		mi_kou.addBox(-32.5F, 4F, -15F, 8, 8, 16);
		mi_kou.setRotationPoint(-15F, -34F, 0F);
		mi_kou.setTextureSize(256, 256);
		mi_kou.mirror = true;
		setRotation(mi_kou, 0F, 0F, 0F);
		m_te = new ModelRenderer(this, 114, 125);
		m_te.addBox(-33.5F, 3F, -23F, 10, 10, 8);
		m_te.setRotationPoint(-15F, -34F, 0F);
		m_te.setTextureSize(256, 256);
		m_te.mirror = true;
		setRotation(m_te, 0F, 0F, 0F);
		h_kata = new ModelRenderer(this, 114, 0);
		h_kata.addBox(0F, -6F, -12F, 20, 6, 24);
		h_kata.setRotationPoint(7F, -36F, 0F);
		h_kata.setTextureSize(256, 256);
		h_kata.mirror = true;
		setRotation(h_kata, 0F, 0F, 0F);
		h_ude = new ModelRenderer(this, 164, 64);
		h_ude.addBox(0F, 0F, -5F, 12, 10, 10);
		h_ude.setRotationPoint(15F, -34F, 0F);
		h_ude.setTextureSize(256, 256);
		h_ude.mirror = true;
		setRotation(h_ude, 0F, 0F, 0F);
		h_hiji = new ModelRenderer(this, 164, 84);
		h_hiji.addBox(12F, 3F, -4F, 16, 9, 8);
		h_hiji.setRotationPoint(15F, -34F, 0F);
		h_hiji.setTextureSize(256, 256);
		h_hiji.mirror = true;
		setRotation(h_hiji, 0F, 0F, 0F);
		h_kou = new ModelRenderer(this, 164, 101);
		h_kou.addBox(24F, 4F, -15F, 8, 8, 16);
		h_kou.setRotationPoint(15F, -34F, 0F);
		h_kou.setTextureSize(256, 256);
		h_kou.mirror = true;
		setRotation(h_kou, 0F, 0F, 0F);
		h_te = new ModelRenderer(this, 164, 125);
		h_te.addBox(23F, 3F, -23F, 10, 10, 8);
		h_te.setRotationPoint(15F, -34F, 0F);
		h_te.setTextureSize(256, 256);
		h_te.mirror = true;
		setRotation(h_te, 0F, 0F, 0F);
		m_ken1 = new ModelRenderer(this, 88, 128);
		m_ken1.addBox(-29F, -50F, -21F, 1, 7, 7);
		m_ken1.setRotationPoint(-15F, -34F, 0F);
		m_ken1.setTextureSize(256, 256);
		m_ken1.mirror = true;
		setRotation(m_ken1, 0F, 0F, 0F);
		m_ken2 = new ModelRenderer(this, 88, 142);
		m_ken2.addBox(-29F, -43F, -23F, 1, 24, 8);
		m_ken2.setRotationPoint(-15F, -34F, 0F);
		m_ken2.setTextureSize(256, 256);
		m_ken2.mirror = true;
		setRotation(m_ken2, 0F, 0F, 0F);
		m_ken3 = new ModelRenderer(this, 88, 174);
		m_ken3.addBox(-29F, -19F, -23F, 1, 20, 6);
		m_ken3.setRotationPoint(-15F, -34F, 0F);
		m_ken3.setTextureSize(256, 256);
		m_ken3.mirror = true;
		setRotation(m_ken3, 0F, 0F, 0F);
		m_ken4 = new ModelRenderer(this, 88, 200);
		m_ken4.addBox(-29.5F, 1F, -25F, 2, 14, 10);
		m_ken4.setRotationPoint(-15F, -34F, 0F);
		m_ken4.setTextureSize(256, 256);
		m_ken4.mirror = true;
		setRotation(m_ken4, 0F, 0F, 0F);
		h_ken1 = new ModelRenderer(this, 88, 128);
		h_ken1.addBox(27.5F, -50F, -21F, 1, 7, 7);
		h_ken1.setRotationPoint(15F, -34F, 0F);
		h_ken1.setTextureSize(256, 256);
		h_ken1.mirror = true;
		setRotation(h_ken1, 0F, 0F, 0F);
		h_ken2 = new ModelRenderer(this, 88, 142);
		h_ken2.addBox(27.5F, -43F, -23F, 1, 24, 8);
		h_ken2.setRotationPoint(15F, -34F, 0F);
		h_ken2.setTextureSize(256, 256);
		h_ken2.mirror = true;
		setRotation(h_ken2, 0F, 0F, 0F);
		h_ken3 = new ModelRenderer(this, 88, 174);
		h_ken3.addBox(27.5F, -19F, -23F, 1, 20, 6);
		h_ken3.setRotationPoint(15F, -34F, 0F);
		h_ken3.setTextureSize(256, 256);
		h_ken3.mirror = true;
		setRotation(h_ken3, 0F, 0F, 0F);
		h_ken4 = new ModelRenderer(this, 88, 200);
		h_ken4.addBox(27F, 1F, -25F, 2, 14, 10);
		h_ken4.setRotationPoint(15F, -34F, 0F);
		h_ken4.setTextureSize(256, 256);
		h_ken4.mirror = true;
		setRotation(h_ken4, 0F, 0F, 0F);
	}

	@Override
	public void render(Entity entity, float f, float f1, float f2, float f3, float f4, float f5)
	{
		super.render(entity, f, f1, f2, f3, f4, f5);
		setRotationAngles(f, f1, f2, f3, f4, f5);
		kao1.render(f5);
		kao2.render(f5);
		kao3.render(f5);
		kuti.render(f5);
		h_tuno1.render(f5);
		h_tuno2.render(f5);
		m_tuno1.render(f5);
		m_tuno2.render(f5);
		kabuto1.render(f5);
		kabuto2.render(f5);
		kabuto3.render(f5);
		karada.render(f5);
		kosiue.render(f5);
		kosi.render(f5);
		kosisita.render(f5);
		kosisita2.render(f5);
		h_momo.render(f5);
		h_hiza.render(f5);
		h_sune.render(f5);
		h_asi.render(f5);
		h_tume1.render(f5);
		h_tume2.render(f5);
		h_tume3.render(f5);
		m_momo.render(f5);
		m_hiza.render(f5);
		m_sune.render(f5);
		m_asi.render(f5);
		m_tume1.render(f5);
		m_tume2.render(f5);
		m_tume3.render(f5);
		m_kata.render(f5);
		m_ude.render(f5);
		m_hiji.render(f5);
		mi_kou.render(f5);
		m_te.render(f5);
		h_kata.render(f5);
		h_ude.render(f5);
		h_hiji.render(f5);
		h_kou.render(f5);
		h_te.render(f5);
		m_ken1.render(f5);
		m_ken2.render(f5);
		m_ken3.render(f5);
		m_ken4.render(f5);
		h_ken1.render(f5);
		h_ken2.render(f5);
		h_ken3.render(f5);
		h_ken4.render(f5);
	}

	private void setRotation(ModelRenderer model, float x, float y, float z)
	{
		model.rotateAngleX = x;
		model.rotateAngleY = y;
		model.rotateAngleZ = z;
	}

	@Override
	public void setRotationAngles(float par1, float par2, float par3, float par4, float par5, float par6)
	{
		kao1.rotateAngleX = par5 / (180F / (float)Math.PI);
		kao2.rotateAngleX = par5 / (180F / (float)Math.PI);
		kao3.rotateAngleX = par5 / (180F / (float)Math.PI);
		kuti.rotateAngleX = par5 / (180F / (float)Math.PI);
		h_tuno1.rotateAngleX = par5 / (180F / (float)Math.PI);
		h_tuno2.rotateAngleX = par5 / (180F / (float)Math.PI);
		m_tuno1.rotateAngleX = par5 / (180F / (float)Math.PI);
		m_tuno2.rotateAngleX = par5 / (180F / (float)Math.PI);
		kabuto1.rotateAngleX = par5 / (180F / (float)Math.PI);
		kabuto2.rotateAngleX = par5 / (180F / (float)Math.PI);
		kabuto3.rotateAngleX = par5 / (180F / (float)Math.PI);
		kao1.rotateAngleY = par4 / (180F / (float)Math.PI);
		kao2.rotateAngleY = par4 / (180F / (float)Math.PI);
		kao3.rotateAngleY = par4 / (180F / (float)Math.PI);
		kuti.rotateAngleY = par4 / (180F / (float)Math.PI);
		h_tuno1.rotateAngleY = par4 / (180F / (float)Math.PI);
		h_tuno2.rotateAngleY = par4 / (180F / (float)Math.PI);
		m_tuno1.rotateAngleY = par4 / (180F / (float)Math.PI);
		m_tuno2.rotateAngleY = par4 / (180F / (float)Math.PI);
		kabuto1.rotateAngleY = par4 / (180F / (float)Math.PI);
		kabuto2.rotateAngleY = par4 / (180F / (float)Math.PI);
		kabuto3.rotateAngleY = par4 / (180F / (float)Math.PI);
		h_momo.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
		h_hiza.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
		h_sune.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
		h_asi.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
		h_tume1.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
		h_tume2.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
		h_tume3.rotateAngleX = MathHelper.cos(par1 * 0.6662F) * 1.4F * par2;
		m_momo.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
		m_hiza.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
		m_sune.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
		m_asi.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
		m_tume1.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
		m_tume2.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;
		m_tume3.rotateAngleX = MathHelper.cos(par1 * 0.6662F + (float)Math.PI) * 1.4F * par2;

	}

}
